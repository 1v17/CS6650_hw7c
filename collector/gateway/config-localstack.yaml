extensions:
  health_check:
    endpoint: "0.0.0.0:${OTEL_GATEWAY_HEALTH_PORT}"
    path: /health

connectors:
  grafanacloud:
    host_identifiers: [ "host.name" ]

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:${OTEL_GATEWAY_GRPC_PORT}"
      http:
        endpoint: "0.0.0.0:${OTEL_GATEWAY_HTTP_PORT}"
  hostmetrics:
    scrapers:
      load:
      memory:

exporters:
  otlphttp/grafana_cloud:
    endpoint: "${GRAFANA_OTEL_ENDPOINT}"
    sending_queue:
      queue_size: 1024

processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 80
    spike_limit_percentage: 15
  batch:
    timeout: 1s
    send_batch_size: 8192
    send_batch_max_size: 8192
  resourcedetection:
    detectors: [ "env", "system" ]
    override: false
  transform/drop_unneeded_resource_attributes:
    error_mode: ignore
    trace_statements:
      - context: resource
        statements:
          - delete_key(attributes, "k8s.pod.start_time")
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
    metric_statements:
      - context: resource
        statements:
          - delete_key(attributes, "k8s.pod.start_time")
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
    log_statements:
      - context: resource
        statements:
          - delete_key(attributes, "k8s.pod.start_time")
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
  transform/add_resource_attributes_as_metric_attributes:
    error_mode: ignore
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["deployment.environment"], resource.attributes["deployment.environment"])
          - set(attributes["service.version"], resource.attributes["service.version"])

service:
  pipelines:
    logs:
      receivers: [ otlp ]
      processors: [
        memory_limiter,
        transform/drop_unneeded_resource_attributes,
        batch
      ]
      exporters: [ otlphttp/grafana_cloud ]
    traces:
      receivers: [ otlp ]
      processors: [
        memory_limiter,
        resourcedetection,
        transform/drop_unneeded_resource_attributes,
        batch
      ]
      exporters: [ otlphttp/grafana_cloud, grafanacloud ]
    metrics:
      receivers: [ otlp, hostmetrics ]
      processors: [
        memory_limiter,
        resourcedetection,
        transform/drop_unneeded_resource_attributes,
        transform/add_resource_attributes_as_metric_attributes,
        batch
      ]
      exporters: [ otlphttp/grafana_cloud ]
    metrics/grafanacloud:
      receivers: [ grafanacloud ]
      processors: [ batch ]
      exporters: [ otlphttp/grafana_cloud ]
  extensions: [ health_check ]
  telemetry:
    logs:
      level: ${OTEL_GATEWAY_LOG_LEVEL}
      encoding: console
